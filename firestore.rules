rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    match /users/{userId} {
      allow read: if true;
      allow write: if isSignedIn() && request.auth.uid == userId;
    }
    match /sessions/{sessionId} {
      allow read: if isSignedIn() && request.auth.uid == resource.data.ownerId;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.ownerId;
    }
    match /posts/{postId} {
      allow read: if true;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.authorId;
      allow update: if isSignedIn() && request.auth.uid == resource.data.authorId;
      allow delete: if false;
    }
    match /postLikes/{likeId} {
      allow read: if true;
      allow create: if isSignedIn()
        && request.auth.uid == request.resource.data.userId
        && request.resource.data.postId is string;
      allow delete: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow update: if false;
    }
    match /follows/{followId} {
      allow read: if true;
      allow create: if isSignedIn()
        && request.auth.uid == request.resource.data.followerId
        && request.resource.data.followeeId is string
        && request.resource.data.followeeId != request.auth.uid;
      allow delete: if isSignedIn() && request.auth.uid == resource.data.followerId;
      allow update: if false;
    }
    match /chatThreads/{chatId} {
      allow read, write: if isSignedIn();
    }
    match /messages/{messageId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.senderId;
      allow update, delete: if false;
    }
  }
}